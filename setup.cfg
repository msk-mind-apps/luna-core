[metadata]
name = luna_core
version = 0.0.1
description = Core library for luna packages.
long_description = README.rst, CHANGELOG.rst, LICENSE
long_description_content_type = text/x-rst
keywords = 
license = Apache License version 2.0
home_page: https://componcmsk.org/msk-mind/
author: msk-mind
author_email: CompOncBST@mskcc.org
classifiers =
    Framework :: Pytest
    Development Status :: 3 - Alpha
    License :: OSI Approved :: Apache Software License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Topic :: Scientific/Engineering :: Artificial Intelligence

# lib can work off of a zip file
[options]
zip_safe = True
include_package_data = True

packages = find:

# keep dependencies abstract and not specific to a particular version
install_requires =
    dask
    distributed
    click
    decorator>=4.3,<5.0  # force constrain versions to avoid incompatibility with networkx requirements
    filehash
    joblib
    minio
    neo4j
    numpy>=1.9.0
    pyspark
    pytest
    pytest-cov
    pytest-mock
    pytest-runner
    wheel>=0.22
    pyinstaller>=4.0
    tornado>=6.0.4
    PyYAML>=5.4
    jsonpath-ng>=1.5.2
    yamale>=3.0.4
    deltalake>=0.2.1
    testfixtures
    requests-mock
    mock
    log4mongo

[options.package_data]
* = *.dcm, *.svg, *.bmp, *.yaml, *.yml, *.parquet, *.crc, *.json, *.npy

#[options.extras_require]
#pdf = ReportLab>=1.2; RXP
#rest = docutils>=0.3; pack ==1.1, ==1.3

#[options.data_files]
#test_data = tests/data_processing/testdata/*

# paths to executables
[options.entry_points]
console_scripts =

[bdist_wheel]
universal = 1

[flake8]
exclude = docs

[aliases]
# Define setup.py command aliases here
test = pytest

[tool:pytest]
collect_ignore = ['setup.py']

[bumpversion]
current_version = 0.1.0
commit = True
tag = True

[bumpversion:file:setup.py]
search = version='{current_version}'
replace = version='{new_version}'

[bumpversion:file:luna_core/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'

